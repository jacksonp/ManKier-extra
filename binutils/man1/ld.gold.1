.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.14.
.TH GOLD "1" "August 2020" "gold (version 2.34) 1.16" "User Commands"
.SH NAME
gold \- The GNU ELF linker
.SH SYNOPSIS
.B ld.gold
[\fI\,options\/\fR] \fI\,file\/\fR...
.SH OPTIONS
.TP
\fB\-\-help\fR
Report usage information
.TP
\fB\-v\fR, \fB\-\-version\fR
Report version information
.TP
\fB\-V\fR
Report version and target information
.TP
\fB\-\-add\-needed\fR
Not supported
.TP
\fB\-\-no\-add\-needed\fR
Do not copy DT_NEEDED tags from shared libraries (default)
.HP
\fB\-\-allow\-multiple\-definition\fR Allow multiple definitions of symbols
.TP
\fB\-\-no\-allow\-multiple\-definition\fR
Do not allow multiple definitions (default)
.TP
\fB\-\-allow\-shlib\-undefined\fR
Allow unresolved references in shared libraries
.TP
\fB\-\-no\-allow\-shlib\-undefined\fR
Do not allow unresolved references in shared libraries (default)
.TP
\fB\-\-apply\-dynamic\-relocs\fR
Apply link\-time values for dynamic relocations (default)
.TP
\fB\-\-no\-apply\-dynamic\-relocs\fR
(aarch64 only) Do not apply link\-time values for dynamic relocations
.TP
\fB\-\-as\-needed\fR
Use DT_NEEDED only for shared libraries that are used
.TP
\fB\-\-no\-as\-needed\fR
Use DT_NEEDED for all shared libraries (default)
.TP
\fB\-assert\fR [ignored]
Ignored
.TP
\fB\-b\fR [elf,binary], \fB\-\-format\fR [elf,binary]
Set input format
.TP
\fB\-\-be8\fR
Output BE8 format image
.TP
\fB\-\-build\-id\fR [=STYLE]
Generate build ID note
.TP
\fB\-\-build\-id\-chunk\-size\-for\-treehash\fR SIZE
Chunk size for '\-\-build\-id=tree'
.TP
\fB\-\-build\-id\-min\-file\-size\-for\-treehash\fR SIZE
Minimum output file size for '\-\-build\-id=tree' to work differently than '\-\-build\-id=sha1'
.HP
\fB\-Bdynamic\fR                   \fB\-l\fR searches for shared libraries (default)
.HP
\fB\-Bstatic\fR                    \fB\-l\fR does not search for shared libraries
.TP
\fB\-dy\fR
alias for \fB\-Bdynamic\fR (default)
.TP
\fB\-dn\fR
alias for \fB\-Bstatic\fR
.TP
\fB\-Bgroup\fR
Use group name lookup rules for shared library
.TP
\fB\-Bshareable\fR
Generate shared library (alias for \fB\-G\fR/\-shared)
.TP
\fB\-Bsymbolic\fR
Bind defined symbols locally
.TP
\fB\-Bsymbolic\-functions\fR
Bind defined function symbols locally
.TP
\fB\-\-check\-sections\fR
Check segment addresses for overlaps (default)
.TP
\fB\-\-no\-check\-sections\fR
Do not check segment addresses for overlaps
.TP
\fB\-\-compress\-debug\-sections\fR [none,zlib,zlib\-gnu,zlib\-gabi]
Compress .debug_* sections in the output file
.TP
\fB\-\-copy\-dt\-needed\-entries\fR
Not supported
.HP
\fB\-\-no\-copy\-dt\-needed\-entries\fR Do not copy DT_NEEDED tags from shared libraries (default)
.TP
\fB\-\-cref\fR
Output cross reference table
.TP
\fB\-\-no\-cref\fR
Do not output cross reference table (default)
.TP
\fB\-\-ctors\-in\-init\-array\fR
Use DT_INIT_ARRAY for all constructors (default)
.TP
\fB\-\-no\-ctors\-in\-init\-array\fR
Handle constructors as directed by compiler
.TP
\fB\-d\fR, \fB\-\-define\-common\fR
Define common symbols
.TP
\fB\-\-no\-define\-common\fR
Do not define common symbols in relocatable output (default)
.TP
\fB\-dc\fR
Alias for \fB\-d\fR
.TP
\fB\-dp\fR
Alias for \fB\-d\fR
.TP
\fB\-\-debug\fR [all,files,script,task][,...]
Turn on debugging
.TP
\fB\-\-defsym\fR SYMBOL=EXPRESSION
Define a symbol
.TP
\fB\-\-demangle\fR [=STYLE]
Demangle C++ symbols in log messages
.TP
\fB\-\-no\-demangle\fR
Do not demangle C++ symbols in log messages
.TP
\fB\-\-detect\-odr\-violations\fR
Look for violations of the C++ One Definition Rule
.TP
\fB\-\-no\-detect\-odr\-violations\fR
Do not look for violations of the C++ One Definition Rule (default)
.TP
\fB\-\-dynamic\-list\-data\fR
Add data symbols to dynamic symbols
.TP
\fB\-\-dynamic\-list\-cpp\-new\fR
Add C++ operator new/delete to dynamic symbols
.HP
\fB\-\-dynamic\-list\-cpp\-typeinfo\fR Add C++ typeinfo to dynamic symbols
.TP
\fB\-\-dynamic\-list\fR FILE
Read a list of dynamic symbols
.TP
\fB\-\-emit\-stub\-syms\fR
(PowerPC only) Label linker stubs with a symbol (default)
.TP
\fB\-\-no\-emit\-stub\-syms\fR
(PowerPC only) Do not label linker stubs with a symbol
.HP
\fB\-e\fR ADDRESS, \fB\-\-entry\fR ADDRESS Set program start address
.TP
\fB\-\-eh\-frame\-hdr\fR
Create exception frame header
.TP
\fB\-\-no\-eh\-frame\-hdr\fR
Do not create exception frame header (default)
.TP
\fB\-\-enable\-new\-dtags\fR
Enable use of DT_RUNPATH (default)
.TP
\fB\-\-disable\-new\-dtags\fR
Disable use of DT_RUNPATH
.TP
\fB\-\-no\-enum\-size\-warning\fR
(ARM only) Do not warn about objects with incompatible enum sizes
.TP
\fB\-\-exclude\-libs\fR lib,lib ...
Exclude libraries from automatic export
.TP
\fB\-E\fR, \fB\-\-export\-dynamic\fR
Export all dynamic symbols
.TP
\fB\-\-no\-export\-dynamic\fR
Do not export all dynamic symbols (default)
.TP
\fB\-\-export\-dynamic\-symbol\fR SYMBOL
Export SYMBOL to dynamic symbol table
.TP
\fB\-EB\fR
Link big\-endian objects.
.TP
\fB\-EL\fR
Link little\-endian objects.
.HP
\fB\-f\fR SHLIB, \fB\-\-auxiliary\fR SHLIB Auxiliary filter for shared object symbol table
.TP
\fB\-F\fR SHLIB, \fB\-\-filter\fR SHLIB
Filter for shared object symbol table
.TP
\fB\-\-fatal\-warnings\fR
Treat warnings as errors
.TP
\fB\-\-no\-fatal\-warnings\fR
Do not treat warnings as errors (default)
.TP
\fB\-fini\fR SYMBOL
Call SYMBOL at unload\-time
.TP
\fB\-\-fix\-arm1176\fR
(ARM only) Fix binaries for ARM1176 erratum (default)
.TP
\fB\-\-no\-fix\-arm1176\fR
(ARM only) Do not fix binaries for ARM1176 erratum
.TP
\fB\-\-fix\-cortex\-a8\fR
(ARM only) Fix binaries for Cortex\-A8 erratum
.TP
\fB\-\-no\-fix\-cortex\-a8\fR
(ARM only) Do not fix binaries for Cortex\-A8 erratum (default)
.TP
\fB\-\-fix\-cortex\-a53\-843419\fR
(AArch64 only) Fix Cortex\-A53 erratum 843419
.TP
\fB\-\-no\-fix\-cortex\-a53\-843419\fR
(AArch64 only) Do not fix Cortex\-A53 erratum 843419 (default)
.TP
\fB\-\-fix\-cortex\-a53\-835769\fR
(AArch64 only) Fix Cortex\-A53 erratum 835769
.TP
\fB\-\-no\-fix\-cortex\-a53\-835769\fR
(AArch64 only) Do not fix Cortex\-A53 erratum 835769 (default)
.TP
\fB\-\-fix\-v4bx\fR
(ARM only) Rewrite BX rn as MOV pc, rn for ARMv4
.TP
\fB\-\-fix\-v4bx\-interworking\fR
(ARM only) Rewrite BX rn branch to ARMv4 interworking veneer
.TP
\fB\-fuse\-ld\fR [gold,bfd]
Ignored for GCC linker option compatibility
.TP
\fB\-g\fR
Ignored
.TP
\fB\-\-gc\-sections\fR
Remove unused sections
.TP
\fB\-\-no\-gc\-sections\fR
Don't remove unused sections (default)
.TP
\fB\-\-gdb\-index\fR
Generate .gdb_index section
.TP
\fB\-\-no\-gdb\-index\fR
Do not generate .gdb_index section (default)
.TP
\fB\-\-gnu\-unique\fR
Enable STB_GNU_UNIQUE symbol binding (default)
.TP
\fB\-\-no\-gnu\-unique\fR
Disable STB_GNU_UNIQUE symbol binding
.TP
\fB\-G\fR, \fB\-shared\fR
Generate shared library
.TP
\fB\-h\fR FILENAME, \fB\-soname\fR FILENAME
Set shared library name
.TP
\fB\-\-hash\-bucket\-empty\-fraction\fR FRACTION
Min fraction of empty buckets in dynamic hash
.TP
\fB\-\-hash\-style\fR [sysv,gnu,both]
Dynamic hash style
.TP
\fB\-i\fR
Alias for \fB\-r\fR
.TP
\fB\-\-icf\fR [none,all,safe]
Identical Code Folding. '\-\-icf=safe' Folds ctors, dtors and functions whose pointers are definitely not taken
.TP
\fB\-\-icf\-iterations\fR COUNT
Number of iterations of ICF (default 3)
.TP
\fB\-\-incremental\fR
Do an incremental link if possible; otherwise, do a full link and prepare output for incremental linking
.TP
\fB\-\-no\-incremental\fR
Do a full link (default)
.TP
\fB\-\-incremental\-full\fR
Do a full link and prepare output for incremental linking
.TP
\fB\-\-incremental\-update\fR
Do an incremental link; exit if not possible
.TP
\fB\-\-incremental\-base\fR FILE
Set base file for incremental linking (default is output file)
.TP
\fB\-\-incremental\-changed\fR
Assume files changed
.TP
\fB\-\-incremental\-unchanged\fR
Assume files didn't change
.TP
\fB\-\-incremental\-unknown\fR
Use timestamps to check files (default)
.TP
\fB\-\-incremental\-startup\-unchanged\fR
Assume startup files unchanged (files preceding this option)
.HP
\fB\-\-incremental\-patch\fR PERCENT Amount of extra space to allocate for patches (default 10)
.TP
\fB\-init\fR SYMBOL
Call SYMBOL at load\-time
.TP
\fB\-I\fR PROGRAM, \fB\-\-dynamic\-linker\fR PROGRAM
Set dynamic linker path
.TP
\fB\-\-just\-symbols\fR FILE
Read only symbol values from FILE
.TP
\fB\-\-keep\-files\-mapped\fR
Keep files mapped across passes (default)
.TP
\fB\-\-no\-keep\-files\-mapped\fR
Release mapped files after each pass
.TP
\fB\-\-keep\-unique\fR SYMBOL
Do not fold this symbol during ICF
.TP
\fB\-l\fR LIBNAME, \fB\-\-library\fR LIBNAME
Search for library LIBNAME
.TP
\fB\-\-ld\-generated\-unwind\-info\fR
Generate unwind information for PLT (default)
.TP
\fB\-\-no\-ld\-generated\-unwind\-info\fR
Do not generate unwind information for PLT
.TP
\fB\-L\fR DIR, \fB\-\-library\-path\fR DIR
Add directory to search path
.TP
\fB\-\-long\-plt\fR
(ARM only) Generate long PLT entries
.TP
\fB\-\-no\-long\-plt\fR
(ARM only) Do not generate long PLT entries (default)
.TP
\fB\-m\fR EMULATION
Set GNU linker emulation; obsolete
.TP
\fB\-\-map\-whole\-files\fR
Map whole files to memory (default)
.TP
\fB\-\-no\-map\-whole\-files\fR
Map relevant file parts to memory
.TP
\fB\-\-merge\-exidx\-entries\fR
(ARM only) Merge exidx entries in debuginfo (default)
.TP
\fB\-\-no\-merge\-exidx\-entries\fR
(ARM only) Do not merge exidx entries in debuginfo
.TP
\fB\-\-mmap\-output\-file\fR
Map the output file for writing (default)
.TP
\fB\-\-no\-mmap\-output\-file\fR
Do not map the output file for writing
.TP
\fB\-M\fR, \fB\-\-print\-map\fR
Write map file on standard output
.TP
\fB\-Map\fR MAPFILENAME
Write map file
.TP
\fB\-n\fR, \fB\-\-nmagic\fR
Do not page align data
.TP
\fB\-N\fR, \fB\-\-omagic\fR
Do not page align data, do not make text readonly
.TP
\fB\-\-no\-omagic\fR
Page align data, make text readonly (default)
.TP
\fB\-\-no\-keep\-memory\fR
Use less memory and more disk I/O (included only for compatibility with GNU ld)
.TP
\fB\-\-no\-undefined\fR
Report undefined symbols (even with \fB\-\-shared\fR)
.TP
\fB\-\-noinhibit\-exec\fR
Create an output file even if errors occur
.TP
\fB\-nostdlib\fR
Only search directories specified on the command line
.TP
\fB\-o\fR FILE, \fB\-\-output\fR FILE
Set output file name
.TP
\fB\-\-oformat\fR [binary]
Set output format
.TP
\fB\-O\fR LEVEL, \fB\-optimize\fR LEVEL
Optimize output file size
.TP
\fB\-\-orphan\-handling\fR [place,discard,warn,error]
Orphan section handling
.TP
\fB\-p\fR
Ignored for ARM compatibility
.TP
\fB\-pie\fR
Create a position independent executable
.TP
\fB\-no\-pie\fR
Do not create a position independent executable (default)
.TP
\fB\-\-pic\-executable\fR
Create a position independent executable
.TP
\fB\-\-no\-pic\-executable\fR
Do not create a position independent executable (default)
.TP
\fB\-\-pic\-veneer\fR
Force PIC sequences for ARM/Thumb interworking veneers
.TP
\fB\-no\-pipeline\-knowledge\fR
(ARM only) Ignore for backward compatibility (default)
.TP
\fB\-\-plt\-align\fR [=P2ALIGN]
(PowerPC only) Align PLT call stubs to fit cache lines
.TP
\fB\-\-plt\-localentry\fR
(PowerPC64 only) Optimize calls to ELFv2 localentry:0 functions
.TP
\fB\-\-no\-plt\-localentry\fR
(PowerPC64 only) Don't optimize ELFv2 calls (default)
.TP
\fB\-\-plt\-static\-chain\fR
(PowerPC64 only) PLT call stubs should load r11
.TP
\fB\-\-no\-plt\-static\-chain\fR
(PowerPC64 only) PLT call stubs should not load r11 (default)
.TP
\fB\-\-plt\-thread\-safe\fR
(PowerPC64 only) PLT call stubs with load\-load barrier
.TP
\fB\-\-no\-plt\-thread\-safe\fR
(PowerPC64 only) PLT call stubs without barrier (default)
.TP
\fB\-\-plugin\fR PLUGIN
Load a plugin library
.TP
\fB\-\-plugin\-opt\fR OPTION
Pass an option to the plugin
.TP
\fB\-\-posix\-fallocate\fR
Use posix_fallocate to reserve space in the output file (default)
.TP
\fB\-\-no\-posix\-fallocate\fR
Use fallocate or ftruncate to reserve space
.TP
\fB\-\-preread\-archive\-symbols\fR
Preread archive symbols when multi\-threaded
.TP
\fB\-\-print\-gc\-sections\fR
List removed unused sections on stderr
.TP
\fB\-\-no\-print\-gc\-sections\fR
Do not list removed unused sections (default)
.TP
\fB\-\-print\-icf\-sections\fR
List folded identical sections on stderr
.TP
\fB\-\-no\-print\-icf\-sections\fR
Do not list folded identical sections (default)
.TP
\fB\-\-print\-output\-format\fR
Print default output format
.TP
\fB\-\-print\-symbol\-counts\fR FILENAME
Print symbols defined and used for each input
.TP
\fB\-\-push\-state\fR
Save the state of flags related to input files
.TP
\fB\-\-pop\-state\fR
Restore the state of flags related to input files
.TP
\fB\-q\fR, \fB\-\-emit\-relocs\fR
Generate relocations in output
.TP
\fB\-Qy\fR
Ignored for SVR4 compatibility
.TP
\fB\-r\fR, \fB\-relocatable\fR
Generate relocatable output
.TP
\fB\-\-relax\fR
Relax branches on certain targets
.TP
\fB\-\-no\-relax\fR
Do not relax branches (default)
.TP
\fB\-\-retain\-symbols\-file\fR FILE
keep only symbols listed in this file
.TP
\fB\-\-rosegment\fR
Put read\-only non\-executable sections in their own segment
.TP
\fB\-\-rosegment\-gap\fR OFFSET
Set offset between executable and read\-only segments
.TP
\fB\-R\fR DIR
Add DIR to runtime search path
.TP
\fB\-rpath\fR DIR
Add DIR to runtime search path
.TP
\fB\-\-rpath\-link\fR DIR
Add DIR to link time shared library search path
.TP
\fB\-s\fR, \fB\-\-strip\-all\fR
Strip all symbols
.TP
\fB\-S\fR, \fB\-\-strip\-debug\fR
Strip debugging information
.TP
\fB\-\-strip\-debug\-non\-line\fR
Emit only debug line number information
.TP
\fB\-\-strip\-debug\-gdb\fR
Strip debug symbols that are unused by gdb (at least versions <= 7.4)
.TP
\fB\-\-strip\-lto\-sections\fR
Strip LTO intermediate code sections (default)
.TP
\fB\-\-section\-ordering\-file\fR FILENAME
Layout sections in the order specified
.TP
\fB\-\-section\-start\fR SECTION=ADDRESS
Set address of section
.TP
\fB\-\-secure\-plt\fR
(PowerPC only) Use new\-style PLT (default)
.TP
\fB\-\-sort\-common\fR [={ascending,descending}]
Sort common symbols by alignment
.TP
\fB\-\-sort\-section\fR [none,name]
Sort sections by name.  '\-\-no\-text\-reorder' will override '\-\-sort\-section=name' for .text
.TP
\fB\-\-spare\-dynamic\-tags\fR COUNT
Dynamic tag slots to reserve (default 5)
.TP
\fB\-\-stub\-group\-size\fR SIZE
(ARM, PowerPC only) The maximum distance from instructions in a group of sections to their stubs. Negative values mean stubs are always after the group. 1 means use default size
.TP
\fB\-\-stub\-group\-multi\fR
(PowerPC only) Allow a group of stubs to serve multiple output sections (default)
.TP
\fB\-\-no\-stub\-group\-multi\fR
(PowerPC only) Each output section has its own stubs
.TP
\fB\-\-split\-stack\-adjust\-size\fR SIZE
Stack size when \fB\-fsplit\-stack\fR function calls non\-split
.TP
\fB\-static\fR
Do not link against shared libraries
.TP
\fB\-\-start\-lib\fR
Start a library
.TP
\fB\-\-end\-lib\fR
End a library
.TP
\fB\-\-stats\fR
Print resource usage statistics
.TP
\fB\-\-sysroot\fR DIR
Set target system root directory
.TP
\fB\-t\fR, \fB\-\-trace\fR
Print the name of each input file
.TP
\fB\-\-target1\-abs\fR
(ARM only) Force R_ARM_TARGET1 type to R_ARM_ABS32
.TP
\fB\-\-target1\-rel\fR
(ARM only) Force R_ARM_TARGET1 type to R_ARM_REL32
.TP
\fB\-\-target2\fR [rel, abs, got\-rel
(ARM only) Set R_ARM_TARGET2 relocation type
.TP
\fB\-\-text\-reorder\fR
Enable text section reordering for GCC section names (default)
.TP
\fB\-\-no\-text\-reorder\fR
Disable text section reordering for GCC section names
.TP
\fB\-\-threads\fR
Run the linker multi\-threaded
.TP
\fB\-\-no\-threads\fR
Do not run the linker multi\-threaded (default)
.TP
\fB\-\-thread\-count\fR COUNT
Number of threads to use
.TP
\fB\-\-thread\-count\-initial\fR COUNT
Number of threads to use in initial pass
.HP
\fB\-\-thread\-count\-middle\fR COUNT Number of threads to use in middle pass
.TP
\fB\-\-thread\-count\-final\fR COUNT
Number of threads to use in final pass
.TP
\fB\-\-tls\-optimize\fR
(PowerPC/64 only) Optimize GD/LD/IE code to IE/LE (default)
.TP
\fB\-\-no\-tls\-optimize\fR
(PowerPC/64 only) Don'''t try to optimize TLS accesses
.TP
\fB\-\-tls\-get\-addr\-optimize\fR
(PowerPC/64 only) Use a special __tls_get_addr call (default)
.TP
\fB\-\-no\-tls\-get\-addr\-optimize\fR
(PowerPC/64 only) Don't use a special __tls_get_addr call
.TP
\fB\-\-toc\-optimize\fR
(PowerPC64 only) Optimize TOC code sequences (default)
.TP
\fB\-\-no\-toc\-optimize\fR
(PowerPC64 only) Don't optimize TOC code sequences
.TP
\fB\-\-toc\-sort\fR
(PowerPC64 only) Sort TOC and GOT sections (default)
.TP
\fB\-\-no\-toc\-sort\fR
(PowerPC64 only) Don't sort TOC and GOT sections
.TP
\fB\-T\fR FILE, \fB\-\-script\fR FILE
Read linker script
.TP
\fB\-Tbss\fR ADDRESS
Set the address of the bss segment
.TP
\fB\-Tdata\fR ADDRESS
Set the address of the data segment
.TP
\fB\-Ttext\fR ADDRESS
Set the address of the text segment
.TP
\fB\-Ttext\-segment\fR ADDRESS
Set the address of the text segment
.TP
\fB\-Trodata\-segment\fR ADDRESS
Set the address of the rodata segment
.TP
\fB\-u\fR SYMBOL, \fB\-\-undefined\fR SYMBOL
Create undefined reference to SYMBOL
.TP
\fB\-\-unresolved\-symbols\fR ignore\-all,report\-all,ignore\-in\-object\-files,ignore\-in\-shared\-libs
How to handle unresolved symbols
.TP
\fB\-\-verbose\fR
Alias for \fB\-\-debug\fR=\fI\,files\/\fR
.TP
\fB\-\-version\-script\fR FILE
Read version script
.TP
\fB\-\-warn\-common\fR
Warn about duplicate common symbols
.TP
\fB\-\-no\-warn\-common\fR
Do not warn about duplicate common symbols (default)
.TP
\fB\-\-warn\-constructors\fR
Ignored
.TP
\fB\-\-no\-warn\-constructors\fR
Ignored
.TP
\fB\-\-warn\-drop\-version\fR
Warn when discarding version information
.TP
\fB\-\-no\-warn\-drop\-version\fR
Do not warn when discarding version information (default)
.TP
\fB\-\-warn\-execstack\fR
Warn if the stack is executable
.TP
\fB\-\-no\-warn\-execstack\fR
Do not warn if the stack is executable (default)
.TP
\fB\-\-no\-warn\-mismatch\fR
Don't warn about mismatched input files
.TP
\fB\-\-warn\-multiple\-gp\fR
Ignored
.TP
\fB\-\-warn\-search\-mismatch\fR
Warn when skipping an incompatible library (default)
.TP
\fB\-\-no\-warn\-search\-mismatch\fR
Don't warn when skipping an incompatible library
.TP
\fB\-\-warn\-shared\-textrel\fR
Warn if text segment is not shareable
.TP
\fB\-\-no\-warn\-shared\-textrel\fR
Do not warn if text segment is not shareable (default)
.TP
\fB\-\-warn\-unresolved\-symbols\fR
Report unresolved symbols as warnings
.TP
\fB\-\-error\-unresolved\-symbols\fR
Report unresolved symbols as errors (default)
.TP
\fB\-\-no\-wchar\-size\-warning\fR
(ARM only) Do not warn about objects with incompatible wchar_t sizes
.TP
\fB\-\-weak\-unresolved\-symbols\fR
Convert unresolved symbols to weak references
.TP
\fB\-\-whole\-archive\fR
Include all archive contents
.TP
\fB\-\-no\-whole\-archive\fR
Include only needed archive contents (default)
.TP
\fB\-\-wrap\fR SYMBOL
Use wrapper functions for SYMBOL
.TP
\fB\-x\fR, \fB\-\-discard\-all\fR
Delete all local symbols
.TP
\fB\-X\fR, \fB\-\-discard\-locals\fR
Delete all temporary local symbols
.TP
\fB\-\-discard\-none\fR
Keep all local symbols
.TP
\fB\-y\fR SYMBOL, \fB\-\-trace\-symbol\fR SYMBOL
Trace references to symbol
.TP
\fB\-\-undefined\-version\fR
Allow unused version in script (default)
.TP
\fB\-\-no\-undefined\-version\fR
Do not allow unused version in script
.TP
\fB\-Y\fR PATH
Default search path for Solaris compatibility
.TP
\-(, \fB\-\-start\-group\fR
Start a library search group
.TP
\-), \fB\-\-end\-group\fR
End a library search group
.TP
\fB\-z\fR bndplt
(x86\-64 only) Generate a BND PLT for Intel MPX
.TP
\fB\-z\fR nobndplt
Generate a regular PLT (default)
.TP
\fB\-z\fR combreloc
Sort dynamic relocs (default)
.TP
\fB\-z\fR nocombreloc
Do not sort dynamic relocs
.TP
\fB\-z\fR common\-page\-size=SIZE
Set common page size to SIZE
.TP
\fB\-z\fR defs
Report undefined symbols (even with \fB\-\-shared\fR)
.TP
\fB\-z\fR execstack
Mark output as requiring executable stack
.TP
\fB\-z\fR global
Make symbols in DSO available for subsequently loaded objects
.TP
\fB\-z\fR initfirst
Mark DSO to be initialized first at runtime
.TP
\fB\-z\fR interpose
Mark object to interpose all DSOs but executable
.TP
\fB\-z\fR lazy
Mark object for lazy runtime binding (default)
.TP
\fB\-z\fR loadfltr
Mark object requiring immediate process
.TP
\fB\-z\fR max\-page\-size=SIZE
Set maximum page size to SIZE
.TP
\fB\-z\fR muldefs
Allow multiple definitions of symbols
.TP
\fB\-z\fR nocopyreloc
Do not create copy relocs
.TP
\fB\-z\fR nodefaultlib
Mark object not to use default search paths
.TP
\fB\-z\fR nodelete
Mark DSO non\-deletable at runtime
.TP
\fB\-z\fR nodlopen
Mark DSO not available to dlopen
.TP
\fB\-z\fR nodump
Mark DSO not available to dldump
.TP
\fB\-z\fR noexecstack
Mark output as not requiring executable stack
.TP
\fB\-z\fR now
Mark object for immediate function binding
.TP
\fB\-z\fR origin
Mark DSO to indicate that needs immediate $ORIGIN processing at runtime
.TP
\fB\-z\fR relro
Where possible mark variables read\-only after relocation (default)
.TP
\fB\-z\fR norelro
Don't mark variables read\-only after relocation
.TP
\fB\-z\fR stack\-size=SIZE
Set PT_GNU_STACK segment p_memsz to SIZE
.TP
\fB\-z\fR text
Do not permit relocations in read\-only segments
.TP
\fB\-z\fR notext
Permit relocations in read\-only segments (default)
.TP
\fB\-z\fR textoff
Permit relocations in read\-only segments (default)
.TP
\fB\-z\fR text\-unlikely\-segment
Move .text.unlikely sections to a separate segment.
.TP
\fB\-z\fR notext\-unlikely\-segment
Do not move .text.unlikely sections to a separate segment. (default)
.HP
\fB\-z\fR keep\-text\-section\-prefix Keep .text.hot, .text.startup, .text.exit and .text.unlikely as separate sections in the final binary.
.TP
\fB\-z\fR nokeep\-text\-section\-prefix
Merge all .text.* prefix sections. (default)
.PP
ld.gold: supported targets: elf32\-iamcu elf32\-i386 elf32\-i386\-freebsd elf32\-i386\-nacl elf32\-x86\-64 elf32\-x86\-64\-freebsd elf32\-x86\-64\-nacl elf64\-x86\-64 elf64\-x86\-64\-freebsd elf64\-x86\-64\-nacl
ld.gold: supported emulations: elf_iamcu elf_i386 elf_i386_nacl elf32_x86_64 elf32_x86_64_nacl elf_x86_64 elf_x86_64_nacl
.SH "REPORTING BUGS"
Report bugs to <http://bugzilla.redhat.com/bugzilla/>
.SH COPYRIGHT
Copyright \(co 2020 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) a later version.
This program has absolutely no warranty.
.SH "SEE ALSO"
The full documentation for
.B gold
is maintained as a Texinfo manual.  If the
.B info
and
.B gold
programs are properly installed at your site, the command
.IP
.B info gold
.PP
should give you access to the complete manual.
