.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` 
.    ds C' 
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PG_UPGRADECLUSTER 1"
.TH PG_UPGRADECLUSTER 1 "2018-09-26" "Debian" "Debian PostgreSQL infrastructure"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pg_upgradecluster \- upgrade an existing PostgreSQL cluster to a new major version.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBpg_upgradecluster\fR [\fB\-v\fR \fInewversion\fR] \fIoldversion\fR \fIname\fR [\fInewdatadir\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpg_upgradecluster\fR upgrades an existing PostgreSQL server cluster (i. e. a
collection of databases served by a \fBpostgres\fR instance) to a new version
specified by \fInewversion\fR (default: latest available version).  The
configuration files of the old version are copied to the new cluster and
adjusted for the new version.  The new cluster is set up to use data page
checksums if the old cluster uses them.
.PP
The cluster of the old version will be configured to use a previously unused
port since the upgraded one will use the original port. The old cluster is not
automatically removed. After upgrading, please verify that the new cluster
indeed works as expected; if so, you should remove the old cluster with
\&\fBpg_dropcluster\fR\|(8). Please note that the old cluster is set to \*(L"manual\*(R"
startup mode, in order to avoid inadvertently changing it; this means that it
will not be started automatically on system boot, and you have to use
\&\fBpg_ctlcluster\fR\|(8) to start/stop it. See section \*(L"\s-1STARTUP CONTROL\*(R"\s0 in
\&\fBpg_createcluster\fR\|(8) for details.
.PP
The \fInewdatadir\fR argument can be used to specify a non-default data directory
of the upgraded cluster. It is passed to \fBpg_createcluster\fR. If not specified,
this defaults to /var/lib/postgresql/\fInewversion\fR/\fIname\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-v\fR \fInewversion\fR" 4
.IX Item "-v newversion"
Set the version to upgrade to (default: latest available).
.IP "\fB\-\-logfile\fR \fIfilel\fR" 4
.IX Item "--logfile filel"
Set a custom log file path for the upgraded database cluster.
.IP "\fB\-\-locale=\fR\fIlocale\fR" 4
.IX Item "--locale=locale"
Set the default locale for the upgraded database cluster. If this option is not
specified, the locale is inherited from the old cluster.
.IP "\fB\-\-lc\-collate=\fR\fIlocale\fR" 4
.IX Item "--lc-collate=locale"
.PD 0
.IP "\fB\-\-lc\-ctype=\fR\fIlocale\fR" 4
.IX Item "--lc-ctype=locale"
.IP "\fB\-\-lc\-messages=\fR\fIlocale\fR" 4
.IX Item "--lc-messages=locale"
.IP "\fB\-\-lc\-monetary=\fR\fIlocale\fR" 4
.IX Item "--lc-monetary=locale"
.IP "\fB\-\-lc\-numeric=\fR\fIlocale\fR" 4
.IX Item "--lc-numeric=locale"
.IP "\fB\-\-lc\-time=\fR\fIlocale\fR" 4
.IX Item "--lc-time=locale"
.PD
Like \fB\-\-locale\fR, but only sets the locale in the specified category.
.IP "\fB\-m\fR, \fB\-\-method=\fRdump|upgrade" 4
.IX Item "-m, --method=dump|upgrade"
Specify the upgrade method.  \*(L"dump\*(R" uses \fBpg_dump\fR\|(1) and
\&\fBpg_restore\fR\|(1), \*(L"upgrade\*(R" uses \fBpg_upgrade\fR\|(1).  The default is
\&\*(L"dump\*(R".
.IP "\fB\-k\fR, \fB\-\-link\fR" 4
.IX Item "-k, --link"
In pg_upgrade mode, use hard links instead of copying files to the new
cluster.  This option is merely passed on to pg_upgrade.  See
\&\fBpg_upgrade\fR\|(1) for details.
.IP "\fB\-\-rename=\fR\fInew cluster name\fR" 4
.IX Item "--rename=new cluster name"
Use a different name for the upgraded cluster.
.IP "\fB\-\-old\-bindir=\fR\fIdirectory\fR" 4
.IX Item "--old-bindir=directory"
Passed to \fBpg_upgrade\fR.
.IP "\fB\-\-maintenance\-db=\fR\fIdatabase\fR" 4
.IX Item "--maintenance-db=database"
Database to connect to for maintenance queries.  The default is \fBtemplate1\fR.
.SH "HOOK SCRIPTS"
.IX Header "HOOK SCRIPTS"
Some PostgreSQL extensions like PostGIS need metadata in auxiliary tables which
must not be upgraded from the old version, but rather initialized for the new
version before copying the table data. For this purpose, extensions (as well as
administrators, of course) can drop upgrade hook scripts into 
\&\f(CW\*(C`/etc/postgresql\-common/pg_upgradecluster.d/\*(C'\fR. Script file names must consist
entirely of upper and lower case letters, digits, underscores, and hyphens; in
particular, dots (i. e. file extensions) are not allowed.
.PP
Scripts in that directory will be called with the following arguments:
.PP
<old version> <cluster name> <new version> <phase>
.PP
Phases:
.IP "\fBinit\fR" 4
.IX Item "init"
A virgin cluster of version \fInew version\fR has been created, i. e.  this new
cluster will already have \fBtemplate1\fR and \fBpostgres\fR, but no user databases. Please note that
you should not create tables in this phase, since they will be overwritten by
the dump/restore or \fBpg_upgrade\fR operation.
.IP "\fBfinish\fR" 4
.IX Item "finish"
All data from the old version cluster has been dumped/reloaded into the new
one. The old cluster still exists, but is not running.
.PP
Failing scripts will abort the upgrade.
The scripts are called as the user who owns the database.
.PP
When \fB\-\-mode=dump\fR and upgrade hook scripts are used, pg_restore is invoked
with \fB\-\-no\-data\-for\-failed\-tables\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBpg_createcluster\fR\|(8), \fBpg_dropcluster\fR\|(8), \fBpg_lsclusters\fR\|(1), \fBpg_wrapper\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Pitt <mpitt@debian.org>
